<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts | Academic</title>
    <link>http://localhost:1313/post/</link>
      <atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    <description>Posts</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>en-us</language><lastBuildDate>Tue, 07 May 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>http://localhost:1313/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Posts</title>
      <link>http://localhost:1313/post/</link>
    </image>
    
    <item>
      <title>Языки научного программирования</title>
      <link>http://localhost:1313/post/%D1%8F%D0%B7%D1%8B%D0%BA%D0%B8-%D0%BD%D0%B0%D1%83%D1%87%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F/</link>
      <pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%D1%8F%D0%B7%D1%8B%D0%BA%D0%B8-%D0%BD%D0%B0%D1%83%D1%87%D0%BD%D0%BE%D0%B3%D0%BE-%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B0%D0%BD%D0%B8%D1%8F/</guid>
      <description>&lt;h2 id=&#34;так-что-же-это&#34;&gt;Так что же это?&lt;/h2&gt;
&lt;p&gt;Научное программирование — высокоориентированный стиль программирования для научных расчетов. От других видов программирования его отличают предельные корректность и стабильность конечного продукта, строгое разделение научной и интерфейсной частей, индивидуальность алгоритмов, а также преобладание эффективности над универсальностью.&lt;/p&gt;
&lt;p&gt;Научное программирование лежит в основе любого современного глобального исследования. Все передовые технологии — от квантовых компьютеров до космических программ — были бы невозможны без специалистов в области научного программирования, способных предоставить ученым надежный и точный инструмент для совершения открытий.&lt;/p&gt;
&lt;p&gt;Ряд отраслей науки непосредственно зависят от уровня развития научного программирования. Так, своего исполнения ждут беспилотный транспорт, «умные» системы управления городским и сельским хозяйством, фондовыми биржами; ждут робототехника, генная инженерия, искусственный интеллект, превосходящий возможности человека.&lt;/p&gt;
&lt;h2 id=&#34;специализации&#34;&gt;Специализации&lt;/h2&gt;
&lt;p&gt;Ученые используют различные языки программирования, выбор которых зависит от типа задачи и предпочтений автора. Исторически первым высокоуровневым языком программирования является Fortran, на нем написано много отлаженных библиотек математической статистики и библиотек для решения дифференциальных уравнений, что актуально для экономики и биологии соответственно.&lt;/p&gt;
&lt;p&gt;Более простым синтаксисом обладает Python, также подходящий для программирования математических вычислений. Язык Python привлекается для обработки данных в математике, физике, экономике, биологии, химии и умеет работать с некоторыми другими «научными» языками: Fortran, C++, C#.&lt;/p&gt;
&lt;p&gt;В свою очередь C# позволяет программировать на платформе .NET, адаптировать программу к общеязыковой исполняющей среде (CLR) и ускорить разработку в рамках оперативных научных сессий.&lt;/p&gt;
&lt;p&gt;Ориентировочный объём дипломной работы 50—60 страниц машинописного текста, курсовой работы — не менее 20 страниц.&lt;/p&gt;
&lt;h2 id=&#34;будущее-профессии-программист-ученый&#34;&gt;Будущее профессии программист-ученый&lt;/h2&gt;
&lt;p&gt;Программирование двигает науку, которая двигает технический прогресс. Изобретения, которые считались революционными вчера, в XXI веке служат бытовым потребностям: СВЧ-печь, мобильный телефон, 8-битная домашняя ЭВМ. От программиста-ученого зависит, каких вершин достигнет наука сегодня и какие из них завтра войдут в каждый дом.&lt;/p&gt;
&lt;p&gt;В руках программиста-ученого находятся инструменты не только для развития промышленности, но и для повышения общего качества жизни. Такой специалист увеличивает прогностическую функцию человечества, помогая предугадывать и предотвращать климатические, финансовые, гуманитарные катастрофы.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Язык разметки Markdown</title>
      <link>http://localhost:1313/post/writing-technical-content/</link>
      <pubDate>Thu, 04 Apr 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/writing-technical-content/</guid>
      <description>&lt;p&gt;Markdown, или маркдаун, — это язык разметки для текстовых документов. Он позволяет создавать тексты без использования Word и других редакторов. Разметку можно прочитать и воспроизвести в любой системе или браузере.&lt;/p&gt;
&lt;p&gt;Маркдаун создал писатель и блогер Джон Грубер вместе с веб-активистом Аароном Шварцем. Они хотели придумать максимально простой и удобный язык разметки, с помощью которого текст можно перевести в красиво оформленный вид. При этом текст обязан оставаться читаемым даже без приведения к «красивому» виду. Таким и оказался Markdown. Его создали в 2004 году, но наибольшую популярность язык получил сейчас. Его поддерживают разнообразные платформы для блогов, сервисы создания заметок, CMS и даже мессенджеры. Поэтому маркдаун полезно знать всем, кто имеет дело с вебом, от разработчиков до блогеров.
Как пользоваться языком разметки&lt;/p&gt;
&lt;p&gt;Человек пишет текст в любом редакторе и добавляет в него специальные комбинации стандартных символов. Это разметка, она показывает, где текст должен быть жирным, где — заголовком, а в каком месте нужен список. С помощью символов можно разметить заголовки, выделения текста и даже сложные конструкции вроде таблиц. Специальные преобразователи формируют на основе разметки готовый документ. Это похоже на использование HTML, но маркдаун проще, текст в нем более читаемый. Преобразователи или изначально есть в текстовом редакторе, например в приложении для заметок, или скачиваются отдельно.&lt;/p&gt;
&lt;p&gt;Кто пользуется маркдауном&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Пользователи интернета, которые общаются в мессенджерах и пишут заметки в сервисах, поддерживающих разметку.
Разработчики, которые пишут с помощью маркдауна документацию для проектов, — им нужен простой и надежный инструмент.
Контент-менеджеры при наполнении сайтов, которые поддерживают маркдаун. Разметка может использоваться и на веб-страницах.
Блогеры, пишущие лонгриды, когда оформляют материалы для статей. Многие платформы для написания текстов поддерживают маркдаун, например Notion.
Писатели и копирайтеры, которым нужен простой инструмент для оформления текста — разметка, читаемая с любого устройства.
Энтузиасты, которые пользуются разметкой в личных целях: пишут заметки и списки дел, ведут дневники или составляют карточки для запоминания.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Для чего нужен маркдаун&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;Быстрое форматирование статьи для перевода в PDF или чтобы она просто выглядела красиво без лишних усилий.
Верстка текстового документа для размещения на сайте, но без применения HTML.
Написание документации для кода.
Составление заметок в личном цифровом блокноте.
Написание красивых сообщений в мессенджерах.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Правила разметки&lt;/p&gt;
&lt;p&gt;Основной синтаксис. Он очень простой: текст «оборачивается» в символы или они ставятся перед строкой. Вот так, например, будут выглядеть заголовки.&lt;/p&gt;
&lt;p&gt;· # Заголовок H1 (первого уровня, например название текста)&lt;/p&gt;
&lt;p&gt;· ## Заголовок H2 (второго уровня, заголовки)&lt;/p&gt;
&lt;p&gt;· ### Заголовок H3 (третьего уровня, промежуточные подзаголовки)&lt;/p&gt;
&lt;p&gt;И так далее, вплоть до заголовков шестого уровня с шестью решетками перед строкой. На практике подзаголовки ниже H3 практически не используют.&lt;/p&gt;
&lt;p&gt;В маркдауне можно применить базовое форматирование текста. Буквицу или рукописный шрифт вставить не получится, но выделить важные участки — легко.&lt;/p&gt;
&lt;p&gt;· &lt;em&gt;Курсив&lt;/em&gt; или &lt;em&gt;курсив&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;· &lt;strong&gt;Жирный текст&lt;/strong&gt; или &lt;strong&gt;жирный текст&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;· &lt;em&gt;&lt;strong&gt;Жирный и подчеркнутый текст&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;· &amp;gt; Цитата (угловая скобка ставится перед каждой строкой цитаты)&lt;/p&gt;
&lt;p&gt;· — Пункт маркированного списка&lt;/p&gt;
&lt;p&gt;· 1. Первый пункт нумерованного списка&lt;/p&gt;
&lt;p&gt;· 2. Второй пункт нумерованного списка (и так далее)&lt;/p&gt;
&lt;p&gt;Вставка материалов. Разметка позволяет вставлять в текст разные элементы: ссылки и изображения, которые потом «подтянутся» в документ, когда применится форматирование.&lt;/p&gt;
&lt;p&gt;· [текст_ссылки](любая ссылка) для вставки ссылок&lt;/p&gt;
&lt;p&gt;· [подпись к картинке](ссылка на картинку) для вставки картинок в текст&lt;/p&gt;
&lt;p&gt;· ***, — или ___ — горизонтальная линия на всю строку, которая отделяет часть текста от другой&lt;/p&gt;
&lt;p&gt;А если в тексте должна быть звездочка или любой другой «специальный» символ, который можно прочесть не так, перед ней надо поставить обратный слэш. Например, вот так: *. Тогда символ отобразится в тексте как надо и не считается как правило разметки.&lt;/p&gt;
&lt;p&gt;Расширенный синтаксис. Существует расширенная версия маркдауна. Она называется GFM, GitHub Flavored Markdown. В ней есть другие интересные возможности, например, &lt;del&gt;зачеркнутый текст&lt;/del&gt;, обернутый в две тильды, или &lt;code&gt;короткий кусок кода&lt;/code&gt;. Многострочный блок кода оборачивается в три грависа над верхней и под нижней строкой. Вот так:&lt;/p&gt;
&lt;p&gt;«`&lt;/p&gt;
&lt;p&gt;Здесь будет строка кода.&lt;/p&gt;
&lt;p&gt;И здесь тоже.&lt;/p&gt;
&lt;p&gt;«`&lt;/p&gt;
&lt;p&gt;Можно создавать таблицы, построенные на символах вертикальной и горизонтальной черты. Или «списки дел»:&lt;/p&gt;
&lt;p&gt;— [X] Выполненное дело&lt;/p&gt;
&lt;p&gt;— [ ] Невыполненное дело&lt;/p&gt;
&lt;p&gt;Если редактор поддерживает GFM, то все подобные элементы синтаксиса тоже преобразуются и будут выглядеть как на веб-странице. В нем есть даже эмодзи: нужно просто вставить в текст код нужного смайла, обернутый в двоеточия. Примерно так: &amp;#x1f604;. Коды эмодзи есть в открытом доступе, их можно посмотреть в интернете.&lt;/p&gt;
&lt;p&gt;Как начать работать с маркдауном&lt;/p&gt;
&lt;p&gt;Все очень просто: нужно установить или открыть любой редактор, который поддерживает эту разметку, и начать писать. Есть локальные редакторы, их надо скачивать, а есть те, что работают в браузере через интернет, как веб-сервис. Выбирайте любой, настраивайте под свои нужды и начинайте. Синтаксис простой, его легко выучить. Может быть даже так, что вы уже частично им пользуетесь: например, в мессенджере Telegram для форматирования текста используется именно маркдаун.&lt;/p&gt;
&lt;p&gt;Если вы хотите пользоваться маркдауном не для личных заметок, а для оформления текста в блоге или на сайте, нужно подключить к ним плагин с поддержкой Markdown. Это тоже несложно, такие плагины существуют для многих CMS.&lt;/p&gt;
&lt;p&gt;Маркдаун пригодится и тем, кто планирует карьеру разработчика. Он нужен в контенте, в веб-программировании, в написании документации. На профессиональных курсах мы подробно рассказываем об этом и других инструментах для разных целей.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Как офорлять отчет</title>
      <link>http://localhost:1313/post/%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%BE%D1%82%D1%87%D0%B5%D1%82%D0%B0/</link>
      <pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%D0%BE%D1%84%D0%BE%D1%80%D0%BC%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5-%D0%BE%D1%82%D1%87%D0%B5%D1%82%D0%B0/</guid>
      <description>&lt;h2 id=&#34;общее-оформление-отчёта&#34;&gt;Общее оформление отчёта&lt;/h2&gt;
&lt;p&gt;Отчет о НИР должен быть выполнен любым печатным способом на пишущей машинке или с использованием компьютера и принтера на одной стороне листа белой бумаги формата А4 через полтора интервала.&lt;/p&gt;
&lt;p&gt;Страницы отчета следует нумеровать арабскими цифрами, соблюдая сквозную нумерацию по всему тексту отчета. Номер страницы проставляют в центре нижней части листа без точки. Титульный лист включают в общую нумерацию страниц отчета. Номер страницы на титульном листе не проставляют.&lt;/p&gt;
&lt;p&gt;Цвет шрифта должен быть черным, высота букв, цифр и других знаков - не менее 1,8 мм (кегль не менее 12). Полужирный шрифт не применяется.&lt;/p&gt;
&lt;p&gt;Текст отчета следует печатать, соблюдая следующие размеры полей: правое - не менее 10 мм, верхнее и нижнее - не менее 20 мм, левое - не менее 30 мм.&lt;/p&gt;
&lt;p&gt;Титульный лист является первой страницей отчета о НИР и служит источником информации, необходимой для обработки и поиска документа. Титульный лист должен содержать город и год выпуска работы.&lt;/p&gt;
&lt;p&gt;Ориентировочный объём дипломной работы 50—60 страниц машинописного текста, курсовой работы — не менее 20 страниц.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Как прошла моя неделя?</title>
      <link>http://localhost:1313/post/getting-started-2/</link>
      <pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/getting-started-2/</guid>
      <description>&lt;h2 id=&#34;моя-неделя&#34;&gt;Моя неделя&lt;/h2&gt;
&lt;p&gt;Она была очень увлекательной! Я сделала много полезного. Попыталась разобраться с лабораторными, начала новый курс в степике (это не реклама) и провела немного времни со семьей. Я считаю, что нужно уметь гармонировать личную жизнь и учебу, чтобы дальнейшее время в жизни не ухудшилось из-за  некоторых ошибок прошлого. Особенно это касается здоровья, поэтому нужно выкрадывать время для активного отдыха и это поможет в будущем разгрузить себя и получить больше сил для дальнейшей работы. Но иногда хочется просто лечь на диван и занятся прокрастинацией, это тоже способ разгрузтся, но не самый эффективный. Поэтому лучше при планировании недели лучше расписать каждый момент или наоборот начать новую книгу, чтобы в свободное время читать ее, а не, например, смотреть короткие видео или листать ленту.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Как прошла моя неделя?</title>
      <link>http://localhost:1313/post/getting-started-3/</link>
      <pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/getting-started-3/</guid>
      <description>&lt;h2 id=&#34;моя-неделя&#34;&gt;Моя неделя&lt;/h2&gt;
&lt;p&gt;Она была очень увлекательной! Я сделала много полезного. Продолжаю попыталась разобраться с лабораторными, начала новый курс в степике (это не реклама) и провела немного времни со семьей. Я считаю, что нужно уметь гармонировать личную жизнь и учебу, чтобы дальнейшее время в жизни не ухудшилось из-за  некоторых ошибок прошлого. Особенно это касается здоровья, поэтому нужно выкрадывать время для активного отдыха и это поможет в будущем разгрузить себя и получить больше сил для дальнейшей работы. Но иногда хочется просто лечь на диван и занятся прокрастинацией, это тоже способ разгрузтся, но не самый эффективный. Поэтому лучше при планировании недели лучше расписать каждый момент или наоборот начать новую книгу, чтобы в свободное время читать ее, а не, например, смотреть короткие видео или листать ленту.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Как прошла моя неделя? 2.0</title>
      <link>http://localhost:1313/post/getting-started/</link>
      <pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/getting-started/</guid>
      <description>&lt;h2 id=&#34;моя-неделя&#34;&gt;Моя неделя&lt;/h2&gt;
&lt;p&gt;Она была очень увлекательной! Я сделала много полезного. Попыталась разобраться с лабораторными, начала новый курс в степике (это не реклама) и провела немного времни со семьей. Я считаю, что нужно уметь гармонировать личную жизнь и учебу, чтобы дальнейшее время в жизни не ухудшилось из-за  некоторых ошибок прошлого. Особенно это касается здоровья, поэтому нужно выкрадывать время для активного отдыха и это поможет в будущем разгрузить себя и получить больше сил для дальнейшей работы. Но иногда хочется просто лечь на диван и занятся прокрастинацией, это тоже способ разгрузтся, но не самый эффективный. Поэтому лучше при планировании недели лучше расписать каждый момент или наоборот начать новую книгу, чтобы в свободное время читать ее, а не, например, смотреть короткие видео или листать ленту.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Управление версиями Git</title>
      <link>http://localhost:1313/post/blog-with-jupyter/</link>
      <pubDate>Sun, 03 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/blog-with-jupyter/</guid>
      <description>&lt;p&gt;Эта глава о том, как начать работу с Git. Вначале изучим основы систем контроля версий, затем перейдём к тому, как запустить Git на вашей ОС и окончательно настроить для работы. В конце главы вы уже будете знать, что такое Git и почему им следует пользоваться, а также получите окончательно настроенную для работы систему.&lt;/p&gt;
&lt;h2 id=&#34;о-системе-контроля-версий&#34;&gt;О системе контроля версий&lt;/h2&gt;
&lt;p&gt;Что такое «система контроля версий» и почему это важно? Система контроля версий — это система, записывающая изменения в файл или набор файлов в течение времени и позволяющая вернуться позже к определённой версии. Для контроля версий файлов в этой книге в качестве примера будет использоваться исходный код программного обеспечения, хотя на самом деле вы можете использовать контроль версий практически для любых типов файлов.&lt;/p&gt;
&lt;p&gt;Если вы графический или web-дизайнер и хотите сохранить каждую версию изображения или макета (скорее всего, захотите), система контроля версий (далее VCS) — как раз то, что нужно. Она позволяет вернуть файлы к состоянию, в котором они были до изменений, вернуть проект к исходному состоянию, увидеть изменения, увидеть, кто последний менял что-то и вызвал проблему, кто поставил задачу и когда и многое другое. Использование VCS также значит в целом, что, если вы сломали что-то или потеряли файлы, вы спокойно можете всё исправить. В дополнение ко всему вы получите всё это без каких-либо дополнительных усилий.&lt;/p&gt;
&lt;h2 id=&#34;локальные-системы-контроля-версий&#34;&gt;Локальные системы контроля версий&lt;/h2&gt;
&lt;p&gt;Многие люди в качестве метода контроля версий применяют копирование файлов в отдельный каталог (возможно даже, каталог с отметкой по времени, если они достаточно сообразительны). Данный подход очень распространён из-за его простоты, однако он невероятно сильно подвержен появлению ошибок. Можно легко забыть в каком каталоге вы находитесь и случайно изменить не тот файл или скопировать не те файлы, которые вы хотели.&lt;/p&gt;
&lt;p&gt;Для того, чтобы решить эту проблему, программисты давным-давно разработали локальные VCS с простой базой данных, которая хранит записи о всех изменениях в файлах, осуществляя тем самым контроль ревизий.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;рис.1.Локальный контроль версий&#34; srcset=&#34;
               /post/blog-with-jupyter/local_hu78fd40899c00ddfbbdc3b314d26ae8e8_29118_5654317a37149abc13acab6d699f2b2d.webp 400w,
               /post/blog-with-jupyter/local_hu78fd40899c00ddfbbdc3b314d26ae8e8_29118_8e424d90887ee6b87da0019704bf3b67.webp 760w,
               /post/blog-with-jupyter/local_hu78fd40899c00ddfbbdc3b314d26ae8e8_29118_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/blog-with-jupyter/local_hu78fd40899c00ddfbbdc3b314d26ae8e8_29118_5654317a37149abc13acab6d699f2b2d.webp&#34;
               width=&#34;760&#34;
               height=&#34;649&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Одной из популярных VCS была система RCS, которая и сегодня распространяется со многими компьютерами. RCS хранит на диске наборы патчей (различий между файлами) в специальном формате, применяя которые она может воссоздавать состояние каждого файла в заданный момент времени.&lt;/p&gt;
&lt;h2 id=&#34;централизованные-системы-контроля-версий&#34;&gt;Централизованные системы контроля версий&lt;/h2&gt;
&lt;p&gt;Следующая серьёзная проблема, с которой сталкиваются люди, — это необходимость взаимодействовать с другими разработчиками. Для того, чтобы разобраться с ней, были разработаны централизованные системы контроля версий (Centralized Version Control System, далее CVCS). Такие системы, как CVS, Subversion и Perforce, используют единственный сервер, содержащий все версии файлов, и некоторое количество клиентов, которые получают файлы из этого централизованного хранилища. Применение CVCS являлось стандартом на протяжении многих лет.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;рис.2.Централизованный контроль версий&#34; srcset=&#34;
               /post/blog-with-jupyter/centralized_huf0e769985dbb9ed7961dafcf71e7b945_32534_8ead6ed4253de62b99968f865c2dcec2.webp 400w,
               /post/blog-with-jupyter/centralized_huf0e769985dbb9ed7961dafcf71e7b945_32534_cb2d4c8f4c2e54c2626571a53db3bda8.webp 760w,
               /post/blog-with-jupyter/centralized_huf0e769985dbb9ed7961dafcf71e7b945_32534_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/blog-with-jupyter/centralized_huf0e769985dbb9ed7961dafcf71e7b945_32534_8ead6ed4253de62b99968f865c2dcec2.webp&#34;
               width=&#34;760&#34;
               height=&#34;528&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Такой подход имеет множество преимуществ, особенно перед локальными VCS. Например, все разработчики проекта в определённой степени знают, чем занимается каждый из них. Администраторы имеют полный контроль над тем, кто и что может делать, и гораздо проще администрировать CVCS, чем оперировать локальными базами данных на каждом клиенте.&lt;/p&gt;
&lt;p&gt;Несмотря на это, данный подход тоже имеет серьёзные минусы. Самый очевидный минус — это единая точка отказа, представленная централизованным сервером. Если этот сервер выйдет из строя на час, то в течение этого времени никто не сможет использовать контроль версий для сохранения изменений, над которыми работает, а также никто не сможет обмениваться этими изменениями с другими разработчиками. Если жёсткий диск, на котором хранится центральная БД, повреждён, а своевременные бэкапы отсутствуют, вы потеряете всё — всю историю проекта, не считая единичных снимков репозитория, которые сохранились на локальных машинах разработчиков. Локальные VCS страдают от той же самой проблемы: когда вся история проекта хранится в одном месте, вы рискуете потерять всё.&lt;/p&gt;
&lt;h2 id=&#34;распределённые-системы-контроля-версий&#34;&gt;Распределённые системы контроля версий&lt;/h2&gt;
&lt;p&gt;Здесь в игру вступают распределённые системы контроля версий (Distributed Version Control System, далее DVCS). В DVCS (таких как Git, Mercurial, Bazaar или Darcs) клиенты не просто скачивают снимок всех файлов (состояние файлов на определённый момент времени) — они полностью копируют репозиторий. В этом случае, если один из серверов, через который разработчики обменивались данными, умрёт, любой клиентский репозиторий может быть скопирован на другой сервер для продолжения работы. Каждая копия репозитория является полным бэкапом всех данных.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;рис.3.Распределенный контроль версий&#34; srcset=&#34;
               /post/blog-with-jupyter/distributed_hu32fcece816b51f095e2c9d91b022522b_38911_d1135671355f93b74c853e5001585898.webp 400w,
               /post/blog-with-jupyter/distributed_hu32fcece816b51f095e2c9d91b022522b_38911_79bffc7d66cf14fa00a180611dc07127.webp 760w,
               /post/blog-with-jupyter/distributed_hu32fcece816b51f095e2c9d91b022522b_38911_1200x1200_fit_q75_h2_lanczos.webp 1200w&#34;
               src=&#34;http://localhost:1313/post/blog-with-jupyter/distributed_hu32fcece816b51f095e2c9d91b022522b_38911_d1135671355f93b74c853e5001585898.webp&#34;
               width=&#34;635&#34;
               height=&#34;760&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Более того, многие DVCS могут одновременно взаимодействовать с несколькими удалёнными репозиториями, благодаря этому вы можете работать с различными группами людей, применяя различные подходы единовременно в рамках одного проекта. Это позволяет применять сразу несколько подходов в разработке, например, иерархические модели, что совершенно невозможно в централизованных системах.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
